# Generated by Django 5.0.6 on 2024-06-04 13:47

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('time_in', models.TimeField(auto_now_add=True)),
                ('time_out', models.TimeField(auto_now=True)),
                ('on_duty', models.BooleanField(default=True)),
                ('employeeID', models.CharField(default='Unknown', max_length=100)),
                ('employee_Name', models.CharField(default='Unknown', max_length=100)),
                ('duty_location', models.CharField(max_length=50)),
                ('salary', models.DecimalField(decimal_places=2, default=450, max_digits=10)),
                ('salary_computation', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PaySlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('employeeID', models.CharField(default='Unknown', max_length=100)),
                ('employee_name', models.CharField(max_length=100)),
                ('total_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_initial', models.CharField(blank=True, max_length=1)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('deployment', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, default=450, max_digits=10)),
                ('groups', models.ManyToManyField(blank=True, related_name='employee_set', related_query_name='employee', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='employee_set', related_query_name='employee', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
